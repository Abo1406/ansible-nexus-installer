- hosts: node2
  become: true
  tasks:
    - name: Install Java and net-tools
      dnf:
        name:
              - java
              - net-tools
        state: present

    - name: Download Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/nexus-3.82.0-08-linux-x86_64.tar.gz
        dest: /opt/
      register: download_result
    - debug: msg={{download_result}}

    - name: Unpack Nexus Tar file
      unarchive:
        src: "{{download_result.dest}}"
        dest: /opt/
        remote_src: true
    - name: Find Nexus Folder
      find:
        paths: /opt
        pattern: "nexus-*"
        file_type: directory
      register: find_result
    - name: Check if nexus folder already exits
      stat:
        path: /opt/nexus
      register: stat_result
    - debug: msg={{stat_result.stat.exists}}

    - name: Rename Nexus Folder
      shell:
        mv {{find_result.files[0].path}} /opt/nexus
      when: not stat_result.stat.exists
    - name: Create Nexus Group
      group:
        name: nexus
        state: present
    - name: Create Nexus User
      user:
        name: nexus
        group: nexus
    - name: Make nexus user owner of nexus folder
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus
        recurse: true

    - name: Make nexus user owner of nexus folder
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus
        recurse: true

    - name: Start Nexus with nexus user
      lineinfile:
        path: /opt/nexus/bin/nexus
        regexp: '^#?run_as_user=""'
        line: run_as_user="nexus"

    - name: start nexus
      command:
        /opt/nexus/bin/nexus start

- name: Verify Nexus Running
  hosts: node2
  tasks:
        - name: Check with ps
          shell:
            ps aux | grep nexus
          register: nexus_status
        - debug: msg={{nexus_status.stdout_lines}}

        - name: Check with nestat
          shell:
            netstat -plnt
          register: app_status
        - debug: msg={{app_status.stdout_lines}}

        - name: Enable 8081 port on firewall
          firewalld:
            port: 8081/tcp
            permanent: true
            state: enabled
